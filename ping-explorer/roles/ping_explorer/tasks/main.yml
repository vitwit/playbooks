---
- name: Install ping_explorer
  become: true
  git:
    repo: '{{ ping_repo }}'
    dest: '{{ user_dir }}/explorer'
    version: 'f35fb4485630a6d80a9246f29e753e9e75fefbd3'
    

- name: Make required changes in app and config.toml
  block:
    - name: Make rpc publicly accessible
      lineinfile: 
        path: '{{ user_dir }}/{{ folder }}/config/config.toml'
        regexp: 'laddr = "tcp://127.0.0.1:26657"'
        line: 'laddr = "tcp://0.0.0.0:26657"'  

    - name: Making the change in the CORS section of config.toml
      lineinfile:
        path: '{{ user_dir }}/{{ folder }}/config/config.toml'
        regexp: 'cors_allowed_origins = \[\]'
        line: 'cors_allowed_origins = ["*"]'  

    - name: Making the change in the CORS section of app.toml
      lineinfile:
        path: '{{ user_dir }}/{{ folder }}/config/app.toml'
        regexp: 'enabled-unsafe-cors = false'       
        line: 'enabled-unsafe-cors = true'

   
    - name: set enable to true under api section
      replace:
        path: '{{ user_dir }}/{{ folder }}/config/app.toml'  
        regexp: '(?ms)(\[api\][^\[]*enable\s*=\s*)false'
        replace: '\1true'

    - name: replace localhost under api section
      replace:
        path: '{{ user_dir }}/{{ folder }}/config/app.toml'
        regexp: 'address = "tcp://localhost:1317"'
        replace: 'address = "tcp://0.0.0.0:1317"'     

    - name: Restart the systemd file of the node
      shell: systemctl restart {{ network }}.service    

    - name: Install nginx
      shell: sudo apt install -y nginx   

    - name: move into the mainnet and remove the other files
      shell: rm -rf *
      args:
        chdir: '{{ user_dir }}/explorer/chains/mainnet'  
      become: yes    

    - name: Copy the sample json file
      become: true
      template:
        src: 'templates/sample.j2'
        dest: '{{ user_dir }}/explorer/chains/mainnet/{{ chain_id }}.json'   


    # - name: extract the sdk version
    #   shell: grep 'github.com/cosmos/cosmos-sdk v' '{{ user_dir }}/{{ network }}/go.mod' | awk '{print $2}' | sed -n 's/^v//p'
    #   register: sdk_version

 
    # - name: Change the sdk version in the json file present in the mainnet folder
    #   become: true
    #   ansible.builtin.replace:
    #     path: '{{ user_dir }}/explorer/chains/mainnet/{{ chain_id }}.json'
    #     regexp: '"sdk_version": ".*"'
    #     replace: '"sdk_version": "{{ sdk_version.stdout }}"'

    - name: Remove contents of /var/www/html
      become: true
      shell: rm -rf *
      args:
        chdir: '/var/www/html/' 

    - name: Debug PATH
      ansible.builtin.debug:
        var: ansible_env.PATH

    - name: Build the explorer
      become: true
      shell: >
            . "{{ user_dir }}/.nvm/nvm.sh" && export PATH="{{ ansible_env.PATH }}:{{ user_dir }}/.nvm/versions/node/v18.19.0/bin" && cd '{{ user_dir }}/explorer' && yarn install --ignore-engines && yarn build
      args:
        chdir: '{{ user_dir }}/explorer'

       

  

    - name: Move the data inside dist folder to /var/www/html
      become: true
      shell: cp -r dist/* /var/www/html/
      args:
        chdir: '{{ user_dir }}/explorer'  

    - name: Restart the journald service file
      shell: systemctl restart systemd-journald.service      
    









